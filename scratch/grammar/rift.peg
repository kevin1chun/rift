Source     <- Rift+

Rift       <- Whitespace Id Whitespace Scope Whitespace

Scope      <- StartScope Expr* EndScope

Expr       <- (Assignment / FuncApply / BinaryOp / Id / Literal) Whitespace

Assignment <- Id Whitespace '=' Whitespace (FuncApply / BinaryOp / Id / Literal) 

FuncApply  <- Id Tuple 

# TODO The tower of precedence of DOOOOOOOOM
BinaryOp   <- (FuncApply / Id / Literal) Whitespace (MathOp / BitwiseOp / CompareOp / BooleanOp) Whitespace (FuncApply / BinaryOp / Id / Literal) 

MathOp     <- [+\-/*] / '**'

BitwiseOp  <- '<<' / '>>' / '&' / '|'

CompareOp  <- '>' / '>=' / '==' / '<=' / '<' / '!='

BooleanOp  <- '&&' / '||'

Literal    <- AnonRift / AnonFunc / Tuple / List / String / Number / Boolean

AnonRift   <- Scope

Tuple      <- '(' Whitespace (Expr Whitespace (',' Whitespace Expr Whitespace)*)? ')'

List       <- '[' Whitespace (Expr Whitespace (',' Whitespace Expr Whitespace)*)? ']'

AnonFunc   <- Tuple Whitespace (('->' Whitespace Expr) / Scope)

Number
   <- ( HexNumeral
      / BinaryNumeral
      / OctalNumeral            # May be a prefix of HexNumeral or BinaryNumeral
      / DecimalNumeral          # May be a prefix of OctalNumeral
      ) [lL]?

DecimalNumeral <- '0' / [1-9] ([_]* [0-9])*

HexNumeral     <- ('0x' / '0X') HexDigits

BinaryNumeral  <- ('0b' / '0B') [01] ([_]* [01])*

OctalNumeral   <- '0' ([_]* [0-7])+

FloatLiteral   <- HexFloat / DecimalFloat

DecimalFloat
   <- Digits '.' Digits?  Exponent? [fFdD]?
    / '.' Digits Exponent? [fFdD]?
    / Digits Exponent [fFdD]?
    / Digits Exponent? [fFdD]

Exponent <- [eE] [+\-]? Digits

HexFloat <- HexSignificand BinaryExponent [fFdD]?

HexSignificand
   <- ('0x' / '0X') HexDigits? '.' HexDigits
    / HexNumeral '.'?                           # May be a prefix of above

BinaryExponent <- [pP] [+\-]? Digits

Digits <- [0-9]([_]*[0-9])*

HexDigits <- HexDigit ([_]*HexDigit)*

HexDigit <- [a-f] / [A-F] / [0-9]

CharLiteral <- ['] (Escape / !['\\] .) [']

StringLiteral <- '\"' (Escape / !["\\\n\r] .)* '\"'

Escape <- '\\' ([btnfr"'\\] / OctalEscape / UnicodeEscape)

OctalEscape
   <- [0-3][0-7][0-7]
    / [0-7][0-7]
    / [0-7]

UnicodeEscape
   <- 'u'+ HexDigit HexDigit HexDigit HexDigit

Boolean    <- 'true' / 'false'

Whitespace
     <- ( [ \t\r\n]+              # WhiteSpace [ \t\r\n\u000C]+
      / '#' (![\r\n] .)* [\r\n]  # EndOfLineComment
      )*

StartScope <- Whitespace '{' Whitespace

EndScope   <- Whitespace '}' Whitespace

Id         <- [a-zA-Z_] [a-zA-Z0-9_]*
